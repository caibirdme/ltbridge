name: Build latest images

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag'
        required: false
        default: 'latest'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu]
      fail-fast: false
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.84.0
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-${{ matrix.target }}-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.target }}-target-

    - name: Install cross
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cross

    - name: Build with cross
      run: cross build --target ${{ matrix.target }} --release

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: ${{ fromJSON('{"aarch64-unknown-linux-gnu":"linux/arm64","x86_64-unknown-linux-gnu":"linux/amd64","x86_64-unknown-linux-musl":"linux/amd64"}')[matrix.target] }}

    - name: Set up QEMU
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      uses: docker/setup-qemu-action@v3

    - name: Docker Buildx cache
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: ${{ fromJSON('{"aarch64-unknown-linux-gnu":"linux/arm64","x86_64-unknown-linux-gnu":"linux/amd64","x86_64-unknown-linux-musl":"linux/amd64"}')[matrix.target] }}
        tags: ghcr.io/${{ github.repository }}:${{ github.event.inputs.tag }}-${{ matrix.target }}
        file: docker/${{ matrix.target }}/Dockerfile
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache
